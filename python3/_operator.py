"""Stub file for the '_operator' module."""
# This is an autogenerated file. It serves as a starting point
# for a more percise manual annotation of this module.
# Feel free to edit the source below, but remove this header when you do.

from typing import List, Tuple, Dict, Undefined, GenericType

def _compare_digest(a, b) -> bool:
    raise BufferError()
    raise TypeError()

def abs(*args, **kwargs) -> object: pass

def add(*args, **kwargs) -> object: pass

def and_(*args, **kwargs) -> object: pass

def concat(*args, **kwargs) -> object: pass

def contains(*args, **kwargs) -> bool: pass

def countOf(*args, **kwargs) -> long: pass

def delitem(*args, **kwargs) -> None: pass

def eq(*args, **kwargs) -> object: pass

def floordiv(*args, **kwargs) -> object: pass

def ge(*args, **kwargs) -> object: pass

def getitem(*args, **kwargs) -> object: pass

def gt(*args, **kwargs) -> object: pass

def iadd(*args, **kwargs) -> object: pass

def iand(*args, **kwargs) -> object: pass

def iconcat(*args, **kwargs) -> object: pass

def ifloordiv(*args, **kwargs) -> object: pass

def ilshift(*args, **kwargs) -> object: pass

def imod(*args, **kwargs) -> object: pass

def imul(*args, **kwargs) -> object: pass

def index(*args, **kwargs) -> object: pass

def indexOf(*args, **kwargs) -> long: pass

def inv(*args, **kwargs) -> object: pass

def invert(*args, **kwargs) -> object: pass

def ior(*args, **kwargs) -> object: pass

def ipow(*args, **kwargs) -> object: pass

def irshift(*args, **kwargs) -> object: pass

def is_(*args, **kwargs) -> bool: pass

def is_not(*args, **kwargs) -> bool: pass

def isub(*args, **kwargs) -> object: pass

def itruediv(*args, **kwargs) -> object: pass

def ixor(*args, **kwargs) -> object: pass

def le(*args, **kwargs) -> object: pass

def length_hint(a, *args, **kwargs) -> long: pass

def lshift(*args, **kwargs) -> object: pass

def lt(*args, **kwargs) -> object: pass

def mod(*args, **kwargs) -> object: pass

def mul(*args, **kwargs) -> object: pass

def ne(*args, **kwargs) -> object: pass

def neg(*args, **kwargs) -> object: pass

def not_(*args, **kwargs) -> bool: pass

def or_(*args, **kwargs) -> object: pass

def pos(*args, **kwargs) -> object: pass

def pow(*args, **kwargs) -> object: pass

def rshift(*args, **kwargs) -> object: pass

def setitem(*args, **kwargs) -> None: pass

def sub(*args, **kwargs) -> object: pass

def truediv(*args, **kwargs) -> object: pass

def truth(*args, **kwargs) -> bool: pass

def xor(*args, **kwargs) -> object: pass
