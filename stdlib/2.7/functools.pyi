# Stubs for functools (Python 2.7)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from abc import ABCMeta, abstractmethod
from typing import Any, Callable, Dict, Sequence
from collections import namedtuple

_AnyCallable = Callable[..., Any]

_T = TypeVar("T")
def reduce(function: Callable[[_T], _T],
           sequence: Iterator[_T], initial=Optional[_T]) -> _T: ...

WRAPPER_ASSIGNMENTS = ... # type: Sequence[str]
WRAPPER_UPDATES = ... # type: Sequence[str]

def update_wrapper(wrapper: _AnyCallable, wrapped: _AnyCallable, assigned: Sequence[str] = ...,
                   updated: Sequence[str] = ...) -> None: ...
def wraps(wrapped: _AnyCallable, assigned: Sequence[str] = ..., updated: Sequence[str] = ...) -> Callable[[_AnyCallable], _AnyCallable]: ...
def total_ordering(cls: type) -> type: ...
def cmp_to_key(mycmp): ...

class partial(object):
    func = ...  # Callable[..., Any]
    args = ...  # type: Tuple[Any]
    keywords = ...  # type: Dict[str, Any]
    def __init__(self, func: Callable[..., Any], *args, **kwargs) -> None: ...
    def __call__(self, *args, **kwargs) -> Any: ...
