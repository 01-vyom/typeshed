"""Stub file for the 'array' module."""
# This is an autogenerated file. It serves as a starting point
# for a more percise manual annotation of this module.
# Feel free to edit the source below, but remove this header when you do.

class array(object):
    def __copy__() -> object: pass
    def __deepcopy__(*args, **kwargs) -> object: pass
    def __reduce__() -> tuple:
        raise AttributeError()
    def __sizeof__() -> long: pass
    def append(*args, **kwargs) -> NoneType: pass
    def buffer_info() -> tuple: pass
    def byteswap() -> NoneType:
        raise RuntimeError()
    def count(*args, **kwargs) -> int: pass
    def extend(*args, **kwargs) -> NoneType: pass
    def fromfile(a, b: int) -> NoneType:
        raise EOFError()
        raise TypeError()
        raise IOError()
        raise MemoryError()
    def fromlist(*args, **kwargs) -> NoneType:
        raise TypeError()
        raise MemoryError()
    def fromstring(a) -> NoneType:
        raise ValueError()
        raise MemoryError()
    def fromunicode(a: str) -> NoneType:
        raise ValueError()
        raise MemoryError()
    def index(*args, **kwargs) -> int:
        raise ValueError()
    def insert(a: int, b) -> NoneType: pass
    def pop(*args, **kwargs) -> object:
        raise IndexError()
    def read(*args, **kwargs) -> NoneType:
        raise DeprecationWarning()
    def remove(*args, **kwargs) -> NoneType:
        raise ValueError()
    def reverse() -> NoneType: pass
    def tofile(*args, **kwargs) -> NoneType:
        raise TypeError()
        raise IOError()
    def tolist() -> list: pass
    def tostring() -> str:
        raise MemoryError()
    def tounicode() -> unicode:
        raise ValueError()
    def write(*args, **kwargs) -> NoneType:
        raise DeprecationWarning()

class arrayiterator(object):
    pass
