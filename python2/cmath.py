"""Stub file for the 'cmath' module."""
# This is an autogenerated file. It serves as a starting point
# for a more percise manual annotation of this module.
# Feel free to edit the source below, but remove this header when you do.

from typing import List, Tuple, Dict, Undefined, GenericType

def acos(*args, **kwargs) -> complex: pass

def acosh(*args, **kwargs) -> complex: pass

def asin(*args, **kwargs) -> complex: pass

def asinh(*args, **kwargs) -> complex: pass

def atan(*args, **kwargs) -> complex: pass

def atanh(*args, **kwargs) -> complex: pass

def cos(*args, **kwargs) -> complex: pass

def cosh(*args, **kwargs) -> complex: pass

def exp(*args, **kwargs) -> complex: pass

def isinf(a: complex) -> bool: pass

def isnan(a: complex) -> bool: pass

def log(a: complex, *args, **kwargs) -> complex: pass

def log10(*args, **kwargs) -> complex: pass

def phase(a: complex) -> float: pass

def polar(a: complex) -> tuple: pass

def rect(a: float, b: float) -> complex: pass

def sin(*args, **kwargs) -> complex: pass

def sinh(*args, **kwargs) -> complex: pass

def sqrt(*args, **kwargs) -> complex: pass

def tan(*args, **kwargs) -> complex: pass

def tanh(*args, **kwargs) -> complex: pass
