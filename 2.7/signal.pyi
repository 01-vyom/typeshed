"""Stub file for the 'signal' module."""
# This is an autogenerated file. It serves as a starting point
# for a more precise manual annotation of this module.
# Feel free to edit the source below, but remove this header when you do.

from typing import Any, List, Tuple, Dict, GenericType

ITIMER_PROF = ...  # type: long
ITIMER_REAL = ...  # type: long
ITIMER_VIRTUAL = ...  # type: long
ItimerError = ...  # type: object
NSIG = ...  # type: int
SIGABRT = ...  # type: int
SIGALRM = ...  # type: int
SIGBUS = ...  # type: int
SIGCHLD = ...  # type: int
SIGCLD = ...  # type: int
SIGCONT = ...  # type: int
SIGFPE = ...  # type: int
SIGHUP = ...  # type: int
SIGILL = ...  # type: int
SIGINT = ...  # type: int
SIGIO = ...  # type: int
SIGIOT = ...  # type: int
SIGKILL = ...  # type: int
SIGPIPE = ...  # type: int
SIGPOLL = ...  # type: int
SIGPROF = ...  # type: int
SIGPWR = ...  # type: int
SIGQUIT = ...  # type: int
SIGRTMAX = ...  # type: int
SIGRTMIN = ...  # type: int
SIGSEGV = ...  # type: int
SIGSTOP = ...  # type: int
SIGSYS = ...  # type: int
SIGTERM = ...  # type: int
SIGTRAP = ...  # type: int
SIGTSTP = ...  # type: int
SIGTTIN = ...  # type: int
SIGTTOU = ...  # type: int
SIGURG = ...  # type: int
SIGUSR1 = ...  # type: int
SIGUSR2 = ...  # type: int
SIGVTALRM = ...  # type: int
SIGWINCH = ...  # type: int
SIGXCPU = ...  # type: int
SIGXFSZ = ...  # type: int
SIG_DFL = ...  # type: long
SIG_IGN = ...  # type: long

def alarm(a: int) -> int: ...

def default_int_handler(*args, **kwargs) -> Any:
    raise KeyboardInterrupt()

def getitimer(a: int) -> tuple: ...

def getsignal(a: int) -> None:
    raise ValueError()

def pause() -> None: ...

def set_wakeup_fd(a: int) -> long:
    raise ValueError()

def setitimer(a: int, b: float, *args, **kwargs) -> tuple: ...

def siginterrupt(a: int, b: int) -> None:
    raise RuntimeError()
    raise ValueError()

def signal(a: int, b) -> None:
    raise RuntimeError()
    raise TypeError()
    raise ValueError()
