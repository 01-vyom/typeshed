"""Stub file for the 'array' module."""
# This is an autogenerated file. It serves as a starting point
# for a more precise manual annotation of this module.
# Feel free to edit the source below, but remove this header when you do.

from typing import Any, List, Tuple, Dict, GenericType

class array(object):
    def __copy__(self) -> Any: ...
    def __deepcopy__(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> tuple:
        raise AttributeError()
    def __sizeof__(self) -> long: ...
    def append(self, *args, **kwargs) -> None: ...
    def buffer_info(self) -> tuple: ...
    def byteswap(self) -> None:
        raise RuntimeError()
    def count(self, *args, **kwargs) -> int: ...
    def extend(self, *args, **kwargs) -> None: ...
    def fromfile(self, a, b: int) -> None:
        raise EOFError()
        raise IOError()
        raise MemoryError()
        raise TypeError()
    def fromlist(self, *args, **kwargs) -> None:
        raise MemoryError()
        raise TypeError()
    def fromstring(self, a) -> None:
        raise MemoryError()
        raise ValueError()
    def fromunicode(self, a: str) -> None:
        raise MemoryError()
        raise ValueError()
    def index(self, *args, **kwargs) -> int:
        raise ValueError()
    def insert(self, a: int, b) -> None: ...
    def pop(self, *args, **kwargs) -> Any:
        raise IndexError()
    def read(self, *args, **kwargs) -> None:
        raise DeprecationWarning()
    def remove(self, *args, **kwargs) -> None:
        raise ValueError()
    def reverse(self) -> None: ...
    def tofile(self, *args, **kwargs) -> None:
        raise IOError()
        raise TypeError()
    def tolist(self) -> list: ...
    def tostring(self) -> str:
        raise MemoryError()
    def tounicode(self) -> unicode:
        raise ValueError()
    def write(self, *args, **kwargs) -> None:
        raise DeprecationWarning()

class arrayiterator(object):
    pass
