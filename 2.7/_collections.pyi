"""Stub file for the '_collections' module."""
# This is an autogenerated file. It serves as a starting point
# for a more precise manual annotation of this module.
# Feel free to edit the source below, but remove this header when you do.

from typing import Any, List, Tuple, Dict, Generic

class defaultdict(object):
    def __copy__(self) -> Any: ...
    def __missing__(self, *args, **kwargs) -> Any:
        raise KeyError()
    def __reduce__(self) -> tuple: ...
    def copy(self) -> Any: ...

class deque(object):
    def __copy__(self) -> Any: ...
    def __reduce__(self) -> tuple: ...
    def __reversed__(self) -> Any: ...
    def __sizeof__(self) -> long: ...
    def append(self, *args, **kwargs) -> None: ...
    def appendleft(self, *args, **kwargs) -> None: ...
    def clear(self) -> None: ...
    def count(self, *args, **kwargs) -> int:
        raise RuntimeError()
    def extend(self, *args, **kwargs) -> None: ...
    def extendleft(self, *args, **kwargs) -> None: ...
    def pop(self) -> Any:
        raise IndexError()
    def popleft(self) -> Any:
        raise IndexError()
    def remove(self, *args, **kwargs) -> None:
        raise IndexError()
        raise ValueError()
    def reverse(self) -> None: ...
    def rotate(self, *args, **kwargs) -> None: ...

class deque_iterator(object):
    def __length_hint__(self) -> int: ...

class deque_reverse_iterator(object):
    def __length_hint__(self) -> int: ...
